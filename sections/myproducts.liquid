{{ 'myproducts.css' | asset_url | stylesheet_tag }}
{% assign collection = collections[section.settings.collection] %}

<!-- Gallery Section -->
<div class="myproducts">
  <div class="column">
    <p class="column__title">
      {{ section.settings.tissovisonin }}
    </p>
    <div class="column__grid">
      {%- for product in collection.products limit: section.settings.products_to_show -%}
        <div class="image-gallery__item">
          <img
            src="{{ product.featured_image | img_url: '432x444', crop: 'center' }}"
            alt="{{ product.title | escape }}"
            width="432"
            height="444"
            loading="lazy"
            class="image-gallery__image">
          {% render 'img_plus'
            , class: 'image-gallery__add-icon'
            , data: product %}
          {% render 'product-modal' %}
        </div>
      {%- endfor -%}
    </div>
  </div>

</div>

{% schema %}
  {
    "name": "t:sections.myproducts.name",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "text",
        "id": "tissovisonin",
        "label": "t:sections.myproducts.settings.tissovisonin",
        "default": "Tisso vision in the wild"
      },
      {
        "type": "collection",
        "id": "collection",
        "label": "Collection"
      },
      {
        "type": "range",
        "id": "products_to_show",
        "min": 1,
        "max": 12,
        "step": 1,
        "default": 6,
        "label": "Number of products to show"
      }
    ],
    "presets": [
      {
        "name": "t:sections.myproducts.presets.name"
      }
    ]
  }
{% endschema %}

{% javascript %}
  document.addEventListener('DOMContentLoaded', function() {
    const addIcons = document.querySelectorAll('.image-gallery__add-icon');
    const productModal = document.getElementById('productModal');
    const closeModalButton = document.getElementById('closeModal');
    const modalContent = document.getElementById('modalContent');

    addIcons.forEach((addIcon) => {
      addIcon.addEventListener('click', function() {
        console.log('Add icon clicked');
        console.log(addIcon);
        const productData = JSON.parse(this.getAttribute('data'));
        console.log(productData)
        modalContent.innerHTML = `
  <div class="product-details">

   <div class="product-details">
          <h2>${title}</h2>
          <p>${price}</p>
          <p>${description}</p>
        </div>
  
  </div>
      `;

// Display the modal
        productModal.style.display = 'block';
      });
    });

// Close the modal when the close button is clicked
    closeModalButton.addEventListener('click', function() {
      productModal.style.display = 'none';
    });

// Close the modal if the user clicks outside the modal content
    window.addEventListener('click', function(event) {
      if (event.target === productModal) {
        productModal.style.display = 'none';
      }
    });
  });
{% endjavascript %}
{% stylesheet %}
  /* Modal background (overlay) */
  .product-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 20px;
    top: 20px;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    justify-content: center;
    align-items: center;
    overflow: auto;
  }

  .modal-content {
    position: relative;
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    width: 80%;
    max-width: 600px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    text-align: center;
  }

  .close-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 30px;
    color: #333;
    cursor: pointer;
  }

  .image-gallery {
    position: relative;
  }

  .image-gallery__item {
    position: relative;
    margin: 10px;
  }

  .column__grid,
  .image-gallery,
  .image-gallery__item {
    border: 1px solid red;
    /* Debugging only */
  }
  .btn {
    padding: 10px 20px;
    border: none;
    cursor: pointer;
    margin-top: 10px;
    color: black;
    background-color: white;
  }
{% endstylesheet %}